{"version":3,"sources":["QuickList.js","component/TodoList.js","Data/index.js","functional/copy.js","App.js","functional/helper.js","serviceWorker.js","index.js"],"names":["food","personal","exercise","work","general","TodoList","list","done","remove","changeState","save","className","filter","item","sort","a","b","priority","charCodeAt","map","i","Todo","todoItem","key","cut","id","checked","onChange","type","value","e","target","onClick","TodoItem","this","copy","Change","List","removeItem","index","indexOf","splice","getRemoveItem","replace","old_item","With","getReplace","get","first_obj","second_obj","slice","obj","property","To","App","useState","todoList","setTodoList","setPriority","useEffect","storedTasks","JSON","parse","localStorage","getItem","todoitemlist","json","setItem","stringify","createInput","useRef","handleChange","addTodo","new_item","todo","window","confirm","new_list","new_todo","change","to","new_text","newList","with","HideAndShowDivOnClick","state","showDiv","event","innerHTML","current","setState","Object","keys","Quicklist","v","itemIndex","onButtonPress","React","Component","href","name","required","htmlFor","ref","placeholder","input","trim","isInputEmpty","isInputNotEmpty","alert","emptyInput","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kRAAe,G,YAAA,CACbA,KAAM,CACJ,oBACA,uBACA,qBACA,qBACA,wBACA,oBACA,qBACA,0BAEFC,SAAU,CACR,wBACA,wCACA,iCACA,kCACA,gDACA,wBACA,wBACA,0BAEFC,SAAU,CACR,uCACA,oBACA,oBACA,qBACA,gBACA,uBACA,sCACA,wCAEFC,KAAM,CACJ,6BACA,sBACA,qBACA,+BACA,qBACA,6BACA,sBACA,oCAEFC,QAAS,CACP,oBACA,yBACA,2BACA,sBACA,qBACA,cACA,wBACA,6CC7CW,SAASC,EAAT,GAA8D,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,YAAaC,EAAQ,EAARA,KAClE,OACE,wBAAIC,UAAU,WACXL,EACEM,QAAO,SAACC,GAAD,OAAUA,EAAKN,OAASA,KAC/BO,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,SAASC,WAAW,GAAKH,EAAEE,SAASC,WAAW,MAEhEC,KAAI,SAACN,EAAMO,GACV,OACE,kBAACC,EAAD,CACEC,SAAUT,EACVL,OAAQA,EACRC,YAAaA,EACbC,KAAMA,EACNa,IAAKH,QAQnB,SAASC,EAAT,GAAwD,IAAxCC,EAAuC,EAAvCA,SAAUd,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,YAAaC,EAAQ,EAARA,KACvCc,EAAMF,EAASf,KAAO,MAAQ,UAEpC,OACE,wBAAIkB,GAAIH,EAASL,UACf,2BACES,QAASJ,EAASf,KAClBoB,SAAU,kBAAMlB,EAAYa,IAC5BM,KAAK,aAEP,2BAAOjB,UAAW,mBAAqBa,EACrCK,MAAOP,EAASO,MAChBF,SAAU,SAACG,GAAD,OAAOpB,EAAKY,EAAUQ,EAAEC,OAAOF,QACzCD,KAAK,SAEP,4BAAQjB,UAAU,cAAcqB,QAAS,kBAAMxB,EAAOc,KAAtD,W,ICzCeW,E,WACnB,WAAYJ,EAAOtB,EAAMU,GAAW,oBAClCiB,KAAKL,MAAQA,EACbK,KAAK3B,KAAOA,EACZ2B,KAAKjB,SAAWA,E,mDAIhB,OAAO,IAAIgB,EAASC,KAAKL,MAAOK,KAAK3B,KAAM2B,KAAKjB,c,KCNrC,SAASkB,EAAKtB,GAC3B,OAAIA,aAAgBoB,EACX,IAAIG,EAAOvB,EAAKsB,QAEhB,IAAIE,EAAKxB,GAIpB,SAASwB,EAAKxB,GACZ,IAAMP,EAAI,YAAOO,GAEjBqB,KAAKI,WASP,SAAuBhC,GACrB,OAAO,SAACO,GACN,IAAM0B,EAAQjC,EAAKkC,QAAQ3B,GAE3B,OADAP,EAAKmC,OAAOF,EAAO,GACZjC,GAbSoC,CAAcpC,GAEhC4B,KAAKS,QAeP,SAAoBrC,GAClB,OAAO,SAACsC,GACN,OAAO,IAAIC,EAAKvC,EAAMsC,IAjBTE,CAAWxC,GAE1B4B,KAAKa,IAAM,WACT,OAAOzC,G,IAkBLuC,E,WACJ,WAAYvC,EAAM0C,GAAY,oBAC5Bd,KAAK5B,KAAOA,EACZ4B,KAAKc,UAAYA,E,iDAGdC,GACH,IAAMV,EAAQL,KAAK5B,KAAKkC,QAAQN,KAAKc,WACrC,MAAM,GAAN,mBACKd,KAAK5B,KAAK4C,MAAM,EAAGX,IADxB,CAEEU,GAFF,YAGKf,KAAK5B,KAAK4C,MAAMX,EAAQ,S,KAK3BH,E,WACJ,WAAYe,GAAM,oBAChBjB,KAAKiB,IAAMA,E,mDAGNC,GACL,OAAO,IAAIC,EAAGnB,KAAKiB,IAAKC,O,KAItBC,E,WACJ,WAAYF,EAAKC,GAAW,oBAC1BlB,KAAKiB,IAAMA,EACXjB,KAAKkB,SAAWA,E,+CAGfvB,GAED,OADAK,KAAKiB,IAAIjB,KAAKkB,UAAYvB,EACnBK,KAAKiB,Q,KCtDD,SAASG,IAAO,IAAD,EACIC,mBAAS,IADb,mBACrBC,EADqB,KACXC,EADW,OAGIF,mBAAS,KAHb,mBAGrBtC,EAHqB,KAGXyC,EAHW,KAK5BC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,aACpD,GAAIJ,EAAa,CACf,IAAMK,EAAeL,EAAYzC,KAAI,SAACW,GAAD,OFZlC,IAAIG,GADgBiC,EEakCpC,GFZpCD,MAAOqC,EAAK3D,KAAM2D,EAAKjD,UAD3C,IAAsBiD,KEcvBT,EAAYQ,MAEb,IAEHN,qBAAU,WACRI,aAAaI,QAAQ,WAAYN,KAAKO,UAAUZ,MAC/C,CAACA,IAEJ,IAAMa,EAAcC,iBAAO,MAErBC,EAAe,SAACzC,GACpB4B,EAAY5B,EAAEC,OAAOF,QAcjB2C,EAAU,SAAC3C,EAAOZ,GACtB,IAAMwD,EAAW,IAAIxC,EAASJ,GAAO,EAAOZ,GAC5CwC,EAAY,GAAD,mBAAKD,GAAL,CAAeiB,MAGtBjE,EAAS,SAACkE,GACd,GC3CKC,OAAOC,QAAQ,+BD2CC,CACnB,IAAMC,EAAW1C,EAAKqB,GAAUlB,WAAWoC,GAC3CjB,EAAYoB,KAIVpE,EAAc,SAACiE,GACnB,IAAMI,EAAW3C,EAAKuC,GAAMK,OAAO,QAAQC,IAAIN,EAAKnE,MAC9CD,EAAO6B,EAAKqB,GAAUlB,WAAWoC,GACvCjB,EAAY,GAAD,mBAAKnD,GAAL,CAAWwE,MAGlBpE,EAAO,SAACgE,EAAMO,GAClB,IAAMH,EAAW3C,EAAKuC,GAAMK,OAAO,SAASC,GAAGC,GACzCC,EAAU/C,EAAKqB,GAAUb,QAAQ+B,GAAMS,KAAKL,GAClDrB,EAAYyB,IAORE,EA9DsB,4MA+D1BC,MAAQ,CACNC,SAAS,GAhEe,4DAmEZC,GACZ,IAAM9D,EAAK8D,EAAMxD,OAAOyD,UAENnB,EAAYoB,QACpB5D,MAAQJ,IAvEM,+BA0EhB,IAAD,OACC6D,EAAYpD,KAAKmD,MAAjBC,QACR,OACE,6BACE,4BAAQtD,QAAS,kBAAM,EAAK0D,SAAS,CAAEJ,SAAUA,MAC9CA,EAAU,OAAS,QAErBA,GACC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGK,OAAOC,KAAKC,GAAW1E,KAAI,SAAC2E,EAAG1E,GAAJ,OAC1B,kBAAC,IAAD,CAAKG,IAAKH,GAAI0E,OAGjBH,OAAOC,KAAKC,GAAW1E,KAAI,SAAC2E,EAAGvD,GAAJ,OAC1B,kBAAC,IAAD,CAAUhB,IAAKgB,GACb,4BAAKuD,GACL,wBAAInF,UAAU,mBACXkF,EAAUC,GAAG3E,KAAI,SAACN,EAAMkF,GAAP,OAChB,wBAAIxE,IAAKwE,GACP,4BAAQ/D,QAAS,EAAKgE,eAAgBnF,kBA9FhC,GA8DQoF,IAAMC,WA6C1C,OACE,yBAAKvF,UAAU,OACb,gCACE,yBAAKA,UAAU,iBACb,4BACE,uBAAGwF,KAAK,KAAR,aAIN,yBAAKxF,UAAU,QACb,yBAAKA,UAAU,SAASc,GAAIR,GAC1B,yCACA,kBAACmE,EAAD,MACA,yBAAKzE,UAAU,YACb,2CACA,8BACG,CAAC,IAAK,IAAK,KAAKQ,KAAI,SAAC2E,EAAG1E,GAAJ,OACnB,8BACE,2BACEQ,KAAK,QACLwE,KAAK,WACL3E,GAAIqE,EACJjE,MAAOiE,EACPnE,SAAU4C,EACVhD,IAAKH,EACLM,QAASoE,IAAM7E,EACfoF,UAAQ,IAEV,2BAAOC,QAAQ,OAAOR,SAK9B,yBAAKnF,UAAU,WACb,2BACEA,UAAU,UACV4F,IAAKlC,EACL+B,KAAK,gBACLI,YAAY,mBACZH,UAAQ,KAGZ,4BAAQ1F,UAAU,SAASqB,QA9HpB,WACb,IAAMyE,EAAQpC,EAAYoB,SCxCvB,SAAyBgB,GAC9B,OAGK,SAAsBA,GAC3B,OAAOA,EAAM5E,MAAM6E,OAJXC,CAAaF,GDwCfG,CAAgBH,GAKlBI,MAAM,sBAJNrC,EAAQiC,EAAM5E,MAAOZ,GClCpB,SAAoBwF,GACzBA,EAAM5E,MAAQ,GDkCViF,CAAWL,GACX/C,EAAY,QAyHR,YAGF,6BACE,uCACA,kBAACrD,EAAD,CACEE,MAAM,EACND,KAAMkD,EACNhD,OAAQA,EACRC,YAAaA,EACbC,KAAMA,KAGV,6BACE,oCACA,kBAACL,EAAD,CACEE,MAAM,EACND,KAAMkD,EACNhD,OAAQA,EACRC,YAAaA,EACbC,KAAMA,OE7KEqG,QACW,cAA7BpC,OAAOqC,SAASC,UAEe,UAA7BtC,OAAOqC,SAASC,UAEhBtC,OAAOqC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b36272c2.chunk.js","sourcesContent":["export default {\n  food: [\n    \"🐄 milk\",\n    \"🥑 avocado\",\n    \"🍞 bread\",\n    \"🥓 bacon\",\n    \"🥦 broccoli\",\n    \"🍳 eggs\",\n    \"🥗 salad\",\n    \"🍝 spaghetti\",\n  ],\n  personal: [\n    \"🎓 study js\",\n    \"🇩🇪 learn german\",\n    \"🎲 game with friends\",\n    \"🦷 dentist appoinment\",\n    \"👩‍⚕️ dr. appoinment\",\n    \"💵 pay rent\",\n    \"💵 do taxes\",\n    \"🎊 plan bday\",\n  ],\n  exercise: [\n    \"🧗‍♂️ climb\",\n    \"🏄 surf\",\n    \"🏊 swim\",\n    \"🛶 canoe\",\n    \"⚽ soccer\",\n    \"👟 running\",\n    \"🧘‍♀️ yoga\",\n    \"🚵‍♀️ cycle\",\n  ],\n  work: [\n    \"🔍 stackOverflow\",\n    \"📒 ledger\",\n    \"📈 chart\",\n    \"🗄️ file docs\",\n    \"👔 shirt\",\n    \"🐍 python update\",\n    \"💻 laptop\",\n    \"🛠️ build version\",\n  ],\n  general: [\n    \"🎁 gift\",\n    \"🎧 headphone\",\n    \"🎮 video games\",\n    \"🎬 movies\",\n    \"🚅 train\",\n    \"⛺ tent\",\n    \"✈️ airplane\",\n    \"👨‍🎤 festival\",\n  ],\n};\n","import React from \"react\";\n\n// (a,b) => return a.priority.keyCode()-b.priority.keyCode();\n\nexport default function TodoList({ list, done, remove, changeState, save }) {\n  return (\n    <ul className=\"entries\">\n      {list\n        .filter((item) => item.done === done)\n        .sort((a, b) => b.priority.charCodeAt(0) - a.priority.charCodeAt(0))\n\n        .map((item, i) => {\n          return (\n            <Todo\n              todoItem={item}\n              remove={remove}\n              changeState={changeState}\n              save={save}\n              key={i}\n            />\n          );\n        })}\n    </ul>\n  );\n}\n\nfunction Todo({ todoItem, remove, changeState, save }) {\n  const cut = todoItem.done ? \"cut\" : \"not-cut\";\n // takes care of input: document.querySelector(\"input\")\n  return (\n    <li id={todoItem.priority}>\n      <input\n        checked={todoItem.done}\n        onChange={() => changeState(todoItem)}\n        type=\"checkbox\"\n      />\n      <input className={\"todo-text-input \" + cut}\n        value={todoItem.value}\n        onChange={(e) => save(todoItem, e.target.value)}\n        type=\"text\"\n      />\n      <button className=\"todo-button\" onClick={() => remove(todoItem)}>remove</button>\n    </li>\n  );\n}\n","export default class TodoItem {\n  constructor(value, done, priority) {\n    this.value = value;\n    this.done = done;\n    this.priority = priority;\n  }\n\n  copy() {\n    return new TodoItem(this.value, this.done, this.priority);\n  }\n}\nexport function turnToDoItem(json) {\n  return new TodoItem(json.value, json.done, json.priority);\n}\n","import TodoItem from \"../Data\";\n\nexport default function copy(item) {\n  if (item instanceof TodoItem) {\n    return new Change(item.copy());\n  } else {\n    return new List(item);\n  }\n}\n\nfunction List(item) {\n  const list = [...item];\n\n  this.removeItem = getRemoveItem(list);\n\n  this.replace = getReplace(list);\n\n  this.get = () => {\n    return list;\n  };\n}\n\nfunction getRemoveItem(list) {\n  return (item) => {\n    const index = list.indexOf(item);\n    list.splice(index, 1);\n    return list;\n  };\n}\n\nfunction getReplace(list) {\n  return (old_item) => {\n    return new With(list, old_item);\n  };\n}\n\nclass With {\n  constructor(list, first_obj) {\n    this.list = list;\n    this.first_obj = first_obj;\n  }\n\n  with(second_obj) {\n    const index = this.list.indexOf(this.first_obj);\n    return [\n      ...this.list.slice(0, index),\n      second_obj,\n      ...this.list.slice(index + 1),\n    ];\n  }\n}\n\nclass Change {\n  constructor(obj) {\n    this.obj = obj;\n  }\n\n  change(property) {\n    return new To(this.obj, property);\n  }\n}\n\nclass To {\n  constructor(obj, property) {\n    this.obj = obj;\n    this.property = property;\n  }\n\n  to(value) {\n    this.obj[this.property] = value;\n    return this.obj;\n  }\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"./App.css\";\nimport \"react-tabs/style/react-tabs.css\";\nimport Quicklist from \"./QuickList\";\n\nimport TodoList from \"./component/TodoList\";\nimport {\n  isInputNotEmpty,\n  emptyInput,\n  confirmDelete,\n} from \"./functional/helper\";\n\nimport copy from \"./functional/copy\";\nimport TodoItem, { turnToDoItem } from \"./Data\";\n\nexport default function App() {\n  const [todoList, setTodoList] = useState([]);\n  // const [inputText,]\n  const [priority, setPriority] = useState(\"a\");\n\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem(\"todoList\"));\n    if (storedTasks) {\n      const todoitemlist = storedTasks.map((e) => turnToDoItem(e));\n      setTodoList(todoitemlist);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n  }, [todoList]);\n\n  const createInput = useRef(null);\n\n  const handleChange = (e) => {\n    setPriority(e.target.value);\n  };\n\n  const create = () => {\n    const input = createInput.current;\n    if (isInputNotEmpty(input)) {\n      addTodo(input.value, priority);\n      emptyInput(input);\n      setPriority(\"a\");\n    } else {\n      alert(\"Do add something!\");\n    }\n  };\n\n  const addTodo = (value, priority) => {\n    const new_item = new TodoItem(value, false, priority);\n    setTodoList([...todoList, new_item]);\n  };\n\n  const remove = (todo) => {\n    if (confirmDelete()) {\n      const new_list = copy(todoList).removeItem(todo);\n      setTodoList(new_list);\n    }\n  };\n\n  const changeState = (todo) => {\n    const new_todo = copy(todo).change(\"done\").to(!todo.done);\n    const list = copy(todoList).removeItem(todo);\n    setTodoList([...list, new_todo]);\n  };\n\n  const save = (todo, new_text) => {\n    const new_todo = copy(todo).change(\"value\").to(new_text);\n    const newList = copy(todoList).replace(todo).with(new_todo);\n    setTodoList(newList);\n  };\n  // const(line,setLine)= useState(false);\n  // const cutIt=()=>{\n  //   setLine(true);\n  // };\n\n  class HideAndShowDivOnClick extends React.Component {\n    state = {\n      showDiv: false,\n    };\n\n    onButtonPress(event) {\n      const id = event.target.innerHTML;\n      // console.log(id);\n      const quickItem = createInput.current;\n      quickItem.value = id;\n    }\n\n    render() {\n      const { showDiv } = this.state;\n      return (\n        <div>\n          <button onClick={() => this.setState({ showDiv: !showDiv })}>\n            {showDiv ? \"hide\" : \"show\"}\n          </button>\n          {showDiv && (\n            <Tabs>\n              <TabList>\n                {Object.keys(Quicklist).map((v, i) => (\n                  <Tab key={i}>{v}</Tab>\n                ))}\n              </TabList>\n              {Object.keys(Quicklist).map((v, index) => (\n                <TabPanel key={index}>\n                  <h3>{v}</h3>\n                  <ul className=\"dropdownContent\">\n                    {Quicklist[v].map((item, itemIndex) => (\n                      <li key={itemIndex}>\n                        <button onClick={this.onButtonPress}>{item}</button>\n                      </li>\n                    ))}\n                  </ul>\n                </TabPanel>\n              ))}\n            </Tabs>\n          )}\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <div className=\"nav-container\">\n          <h1>\n            <a href=\"/\">Clever</a>\n          </h1>\n        </div>\n      </header>\n      <div className=\"main\">\n        <div className=\"create\" id={priority}>\n          <h1>New To-do</h1>\n          <HideAndShowDivOnClick />\n          <div className=\"priority\">\n            <h4>Importance?</h4>\n            <form>\n              {[\"a\", \"b\", \"c\"].map((v, i) => (\n                <span>\n                  <input\n                    type=\"radio\"\n                    name=\"priority\"\n                    id={v}\n                    value={v}\n                    onChange={handleChange}\n                    key={i}\n                    checked={v === priority ? true : false}\n                    required\n                  />\n                  <label htmlFor=\"not\">{v}</label>\n                </span>\n              ))}\n            </form>\n          </div>\n          <div className=\"textbox\">\n            <input\n              className=\"textbox\"\n              ref={createInput}\n              name=\"creationInput\"\n              placeholder=\"What to do next?\"\n              required\n            />\n          </div>\n          <button className=\"addNew\" onClick={create}>Add New</button>\n        </div>\n\n        <div>\n          <h1>To-Do's</h1>\n          <TodoList\n            done={false}\n            list={todoList}\n            remove={remove}\n            changeState={changeState}\n            save={save}\n          />\n        </div>\n        <div>\n          <h1>Done</h1>\n          <TodoList\n            done={true}\n            list={todoList}\n            remove={remove}\n            changeState={changeState}\n            save={save}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","export function isInputNotEmpty(input) {\n  return !isInputEmpty(input);\n}\n\nexport function isInputEmpty(input) {\n  return input.value.trim() ? false : true;\n}\n\nexport function emptyInput(input) {\n  input.value = \"\";\n}\n\nexport function confirmDelete() {\n  return window.confirm(\"Sure you wanna delete item?\");\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}