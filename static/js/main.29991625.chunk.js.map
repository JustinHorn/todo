{"version":3,"sources":["QuickList.js","component/TodoList.js","functional/helper.js","Data/index.js","functional/copy.js","App.js","component/Confirm.js","serviceWorker.js","index.js","component/confirm.module.css"],"names":["food","personal","exercise","work","general","TodoList","list","done","remove","changeState","save","className","filter","item","sort","a","b","priority","charCodeAt","map","i","Todo","todoItem","key","cut","id","checked","onChange","type","value","e","target","onClick","emptyInput","input","TodoItem","this","copy","Change","List","removeItem","index","indexOf","splice","getRemoveItem","replace","old_item","With","getReplace","get","first_obj","second_obj","slice","obj","property","To","App","useState","todoList","setTodoList","setPriority","useEffect","storedTasks","JSON","parse","localStorage","getItem","todoitemlist","json","setItem","stringify","createInput","useRef","handleChange","addTodo","new_item","todo","h1","p","onYes","doRemove","confirmAlert","customUI","onClose","styles","form","button","safe","danger","new_list","new_todo","change","to","new_text","newList","with","HideAndShowDivOnClick","state","showDiv","event","innerHTML","current","setState","Object","keys","Quicklist","v","itemIndex","onButtonPress","React","Component","href","name","required","htmlFor","ref","placeholder","trim","isInputEmpty","isInputNotEmpty","preventDefault","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.29991625.chunk.js","sourcesContent":["export default {\r\n  food: [\r\n    \"🐄 milk\",\r\n    \"🥑 avocado\",\r\n    \"🍞 bread\",\r\n    \"🥓 bacon\",\r\n    \"🥦 broccoli\",\r\n    \"🍳 eggs\",\r\n    \"🥗 salad\",\r\n    \"🍝 spaghetti\",\r\n  ],\r\n  personal: [\r\n    \"🎓 study js\",\r\n    \"🇩🇪 learn german\",\r\n    \"🎲 game with friends\",\r\n    \"🦷 dentist appoinment\",\r\n    \"👩‍⚕️ dr. appoinment\",\r\n    \"💵 pay rent\",\r\n    \"💵 do taxes\",\r\n    \"🎊 plan bday\",\r\n  ],\r\n  exercise: [\r\n    \"🧗‍♂️ climb\",\r\n    \"🏄 surf\",\r\n    \"🏊 swim\",\r\n    \"🛶 canoe\",\r\n    \"⚽ soccer\",\r\n    \"👟 running\",\r\n    \"🧘‍♀️ yoga\",\r\n    \"🚵‍♀️ cycle\",\r\n  ],\r\n  work: [\r\n    \"🔍 stackOverflow\",\r\n    \"📒 ledger\",\r\n    \"📈 chart\",\r\n    \"🗄️ file docs\",\r\n    \"👔 shirt\",\r\n    \"🐍 python update\",\r\n    \"💻 laptop\",\r\n    \"🛠️ build version\",\r\n  ],\r\n  general: [\r\n    \"🎁 gift\",\r\n    \"🎧 headphone\",\r\n    \"🎮 video games\",\r\n    \"🎬 movies\",\r\n    \"🚅 train\",\r\n    \"⛺ tent\",\r\n    \"✈️ airplane\",\r\n    \"👨‍🎤 festival\",\r\n  ],\r\n};\r\n","import React from \"react\";\r\n\r\n// (a,b) => return a.priority.keyCode()-b.priority.keyCode();\r\n\r\nexport default function TodoList({ list, done, remove, changeState, save }) {\r\n  return (\r\n    <ul className=\"entries\">\r\n      {list\r\n        .filter((item) => item.done === done)\r\n        .sort((a, b) => b.priority.charCodeAt(0) - a.priority.charCodeAt(0))\r\n\r\n        .map((item, i) => {\r\n          return (\r\n            <Todo\r\n              todoItem={item}\r\n              remove={remove}\r\n              changeState={changeState}\r\n              save={save}\r\n              key={i}\r\n            />\r\n          );\r\n        })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction Todo({ todoItem, remove, changeState, save }) {\r\n  const cut = todoItem.done ? \"cut\" : \"not-cut\";\r\n // takes care of input: document.querySelector(\"input\")\r\n  return (\r\n    <li id={todoItem.priority}>\r\n      <input\r\n        checked={todoItem.done}\r\n        onChange={() => changeState(todoItem)}\r\n        type=\"checkbox\"\r\n      />\r\n      <input className={\"todo-text-input \" + cut}\r\n        value={todoItem.value}\r\n        onChange={(e) => save(todoItem, e.target.value)}\r\n        type=\"text\"\r\n      />\r\n      <button className=\"todo-button\" onClick={() => remove(todoItem)}>remove</button>\r\n    </li>\r\n  );\r\n}\r\n","export function isInputNotEmpty(input) {\r\n  return !isInputEmpty(input);\r\n}\r\n\r\nexport function isInputEmpty(input) {\r\n  return input.value.trim() ? false : true;\r\n}\r\n\r\nexport function emptyInput(input) {\r\n  input.value = \"\";\r\n}\r\n\r\nexport function confirmDelete() {\r\n  return window.confirm(\"Sure you wanna delete item?\");\r\n}\r\n","export default class TodoItem {\r\n  constructor(value, done, priority) {\r\n    this.value = value;\r\n    this.done = done;\r\n    this.priority = priority;\r\n  }\r\n\r\n  copy() {\r\n    return new TodoItem(this.value, this.done, this.priority);\r\n  }\r\n}\r\nexport function turnToDoItem(json) {\r\n  return new TodoItem(json.value, json.done, json.priority);\r\n}\r\n","import TodoItem from \"../Data\";\r\n\r\nexport default function copy(item) {\r\n  if (item instanceof TodoItem) {\r\n    return new Change(item.copy());\r\n  } else {\r\n    return new List(item);\r\n  }\r\n}\r\n\r\nfunction List(item) {\r\n  const list = [...item];\r\n\r\n  this.removeItem = getRemoveItem(list);\r\n\r\n  this.replace = getReplace(list);\r\n\r\n  this.get = () => {\r\n    return list;\r\n  };\r\n}\r\n\r\nfunction getRemoveItem(list) {\r\n  return (item) => {\r\n    const index = list.indexOf(item);\r\n    list.splice(index, 1);\r\n    return list;\r\n  };\r\n}\r\n\r\nfunction getReplace(list) {\r\n  return (old_item) => {\r\n    return new With(list, old_item);\r\n  };\r\n}\r\n\r\nclass With {\r\n  constructor(list, first_obj) {\r\n    this.list = list;\r\n    this.first_obj = first_obj;\r\n  }\r\n\r\n  with(second_obj) {\r\n    const index = this.list.indexOf(this.first_obj);\r\n    return [\r\n      ...this.list.slice(0, index),\r\n      second_obj,\r\n      ...this.list.slice(index + 1),\r\n    ];\r\n  }\r\n}\r\n\r\nclass Change {\r\n  constructor(obj) {\r\n    this.obj = obj;\r\n  }\r\n\r\n  change(property) {\r\n    return new To(this.obj, property);\r\n  }\r\n}\r\n\r\nclass To {\r\n  constructor(obj, property) {\r\n    this.obj = obj;\r\n    this.property = property;\r\n  }\r\n\r\n  to(value) {\r\n    this.obj[this.property] = value;\r\n    return this.obj;\r\n  }\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport \"./App.css\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport Quicklist from \"./QuickList\";\r\n\r\nimport TodoList from \"./component/TodoList\";\r\nimport {\r\n  isInputNotEmpty,\r\n  emptyInput,\r\n  confirmDelete,\r\n} from \"./functional/helper\";\r\n\r\nimport Confirm from \"./component/Confirm\";\r\n\r\nimport copy from \"./functional/copy\";\r\nimport TodoItem, { turnToDoItem } from \"./Data\";\r\n\r\nexport default function App() {\r\n  const [todoList, setTodoList] = useState([]);\r\n  // const [inputText,]\r\n  const [priority, setPriority] = useState(\"a\");\r\n\r\n  useEffect(() => {\r\n    const storedTasks = JSON.parse(localStorage.getItem(\"todoList\"));\r\n    if (storedTasks) {\r\n      const todoitemlist = storedTasks.map((e) => turnToDoItem(e));\r\n      setTodoList(todoitemlist);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todoList\", JSON.stringify(todoList));\r\n  }, [todoList]);\r\n\r\n  const createInput = useRef(null);\r\n\r\n  const handleChange = (e) => {\r\n    setPriority(e.target.value);\r\n  };\r\n\r\n  const create = (e) => {\r\n    const input = createInput.current;\r\n    if (isInputNotEmpty(input)) {\r\n      addTodo(input.value, priority);\r\n      emptyInput(input);\r\n      setPriority(\"a\");\r\n      e.preventDefault();\r\n    } else {\r\n      emptyInput(input);\r\n    }\r\n  };\r\n\r\n  const addTodo = (value, priority) => {\r\n    const new_item = new TodoItem(value, false, priority);\r\n    setTodoList([...todoList, new_item]);\r\n  };\r\n\r\n  const remove = (todo) => {\r\n    Confirm(\"Are you sure?\", \"That you want to delete the todo?\", () => {\r\n      doRemove(todo);\r\n    });\r\n  };\r\n\r\n  const doRemove = (todo) => {\r\n    const new_list = copy(todoList).removeItem(todo);\r\n    setTodoList(new_list);\r\n  };\r\n\r\n  const changeState = (todo) => {\r\n    const new_todo = copy(todo).change(\"done\").to(!todo.done);\r\n    const list = copy(todoList).removeItem(todo);\r\n    setTodoList([...list, new_todo]);\r\n  };\r\n\r\n  const save = (todo, new_text) => {\r\n    const new_todo = copy(todo).change(\"value\").to(new_text);\r\n    const newList = copy(todoList).replace(todo).with(new_todo);\r\n    setTodoList(newList);\r\n  };\r\n  // const(line,setLine)= useState(false);\r\n  // const cutIt=()=>{\r\n  //   setLine(true);\r\n  // };\r\n\r\n  class HideAndShowDivOnClick extends React.Component {\r\n    state = {\r\n      showDiv: false,\r\n    };\r\n\r\n    onButtonPress(event) {\r\n      const id = event.target.innerHTML;\r\n      // console.log(id);\r\n      const quickItem = createInput.current;\r\n      quickItem.value = id;\r\n    }\r\n\r\n    render() {\r\n      const { showDiv } = this.state;\r\n      return (\r\n        <div>\r\n          <button onClick={() => this.setState({ showDiv: !showDiv })}>\r\n            {showDiv ? \"hide\" : \"show\"}\r\n          </button>\r\n          {showDiv && (\r\n            <Tabs>\r\n              <TabList>\r\n                {Object.keys(Quicklist).map((v, i) => (\r\n                  <Tab key={i}>{v}</Tab>\r\n                ))}\r\n              </TabList>\r\n              {Object.keys(Quicklist).map((v, index) => (\r\n                <TabPanel key={index}>\r\n                  <h3>{v}</h3>\r\n                  <ul className=\"dropdownContent\">\r\n                    {Quicklist[v].map((item, itemIndex) => (\r\n                      <li key={itemIndex}>\r\n                        <button onClick={this.onButtonPress}>{item}</button>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </TabPanel>\r\n              ))}\r\n            </Tabs>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <div className=\"nav-container\">\r\n          <h1>\r\n            <a href=\"/\">Clever</a>\r\n          </h1>\r\n        </div>\r\n      </header>\r\n      <div className=\"main\">\r\n        <div className=\"create\" id={priority}>\r\n          <h1>New To-do</h1>\r\n          <HideAndShowDivOnClick />\r\n          <div className=\"priority\">\r\n            <h4>Importance?</h4>\r\n            <form>\r\n              {[\"a\", \"b\", \"c\"].map((v, i) => (\r\n                <span>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"priority\"\r\n                    id={v}\r\n                    value={v}\r\n                    onChange={handleChange}\r\n                    key={i}\r\n                    checked={v === priority ? true : false}\r\n                    required\r\n                  />\r\n                  <label htmlFor=\"not\">{v}</label>\r\n                </span>\r\n              ))}\r\n            </form>\r\n          </div>\r\n          <div className=\"textbox\">\r\n            <form>\r\n              <input\r\n                className=\"textbox\"\r\n                ref={createInput}\r\n                name=\"creationInput\"\r\n                placeholder=\"What to do next?\"\r\n                required\r\n              />\r\n              <button type=\"submit\" onClick={create}>\r\n                add new{\" \"}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <h1>To-Do's</h1>\r\n          <TodoList\r\n            done={false}\r\n            list={todoList}\r\n            remove={remove}\r\n            changeState={changeState}\r\n            save={save}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h1>Done</h1>\r\n          <TodoList\r\n            done={true}\r\n            list={todoList}\r\n            remove={remove}\r\n            changeState={changeState}\r\n            save={save}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\r\nimport styles from \"./confirm.module.css\";\r\n\r\nexport default (h1, p, onYes) => {\r\n  confirmAlert({\r\n    customUI: ({ onClose }) => {\r\n      return (\r\n        <div className=\"custom-ui\">\r\n          <h1>{h1}</h1>\r\n          <p>{p}</p>\r\n          <form className={styles.form}>\r\n            <button\r\n              className={styles.button + \" \" + styles.safe}\r\n              onClick={onClose}\r\n            >\r\n              No\r\n            </button>\r\n            <button\r\n              className={styles.button + \" \" + styles.danger}\r\n              onClick={() => {\r\n                onYes();\r\n                onClose();\r\n              }}\r\n            >\r\n              Yes\r\n            </button>\r\n          </form>\r\n        </div>\r\n      );\r\n    },\r\n  });\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"danger\":\"confirm_danger__2mahf\",\"safe\":\"confirm_safe__S9dml\",\"button\":\"confirm_button__3uWOQ\",\"form\":\"confirm_form__2ZGHu\"};"],"sourceRoot":""}